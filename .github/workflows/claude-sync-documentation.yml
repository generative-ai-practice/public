name: Sync Documentation
on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**/*.ts'
      - 'scripts/**/*.ts'
      - 'package.json'
      - 'tsconfig.json'
      - '.github/workflows/**/*.yml'
      - '.github/workflows/**/*.yaml'
  workflow_dispatch: {}

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: false

defaults:
  run:
    shell: 'bash'

jobs:
  doc-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: 'Check skip label on associated PR'
        id: 'check_skip_label'
        env:
          SKIP_LABEL: "${{ vars.CLAUDE_DOC_SYNC_SKIP_LABEL || 'skip-doc-sync' }}"
        uses: 'actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea'
        with:
          script: |
            const labelName = process.env.SKIP_LABEL;
            const { data: prs } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
            });

            const match = prs.find((pr) =>
              pr.labels?.some((label) => label.name === labelName),
            );

            core.setOutput('skip', match ? 'true' : 'false');
            core.setOutput('label', labelName);
            if (match) {
              core.info(`Found label "${labelName}" on PR #${match.number}; documentation sync will be skipped.`);
            }

      - uses: actions/checkout@v4
        if: ${{ steps.check_skip_label.outputs.skip != 'true' }}
        with:
          fetch-depth: 0

      - name: 'Generate timestamp'
        id: 'timestamp'
        if: ${{ steps.check_skip_label.outputs.skip != 'true' }}
        run: |
          echo "value=$(date -u '+%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"

      - uses: anthropics/claude-code-action@v1
        if: ${{ steps.check_skip_label.outputs.skip != 'true' }}
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            REPO: ${{ github.repository }}
            COMMIT SHA: ${{ github.sha }}

            Main branch was updated with changes to TypeScript source code. Please:

            1. Review the changes in src/, scripts/, and .github/workflows/ directories
            2. Update CLAUDE.md if development commands or architecture changed
            3. Update README_original.md if needed
            4. Check if translation system changes require updates to docs/*_original.md files
            5. Ensure any new environment variables are documented
            6. Update package.json scripts documentation if new commands were added
            7. Create new documentation files if needed (e.g., docs/api_original.md, docs/setup_original.md)

            Focus on:
            - Translation workflow documentation (original files only)
            - Development setup instructions
            - GitHub Actions workflow changes
            - API changes in the translation system
            - Configuration options and environment variables
            - New features that need documentation

            Guidelines:
            - Only update or create original (*_original) documentation files
            - Suggest creating new docs files for major new features
            - Consider docs/troubleshooting_original.md for common issues
            - Consider docs/contributing_original.md for development guidelines
            - Translated versions will be handled by the translation workflow

            Create or update files and commit changes for a documentation update.

          claude_args: |
            --allowedTools "Read,Write,Edit,Bash(git:*),Bash(yarn:*)"

      - name: 'Check for changes'
        id: 'git_status'
        if: ${{ steps.check_skip_label.outputs.skip != 'true' }}
        run: |
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
          fi

      - name: 'Create documentation sync pull request'
        if: ${{ steps.git_status.outputs.has_changes == 'true' }}
        uses: 'peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e'
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          branch: 'automation/doc-sync-${{ steps.timestamp.outputs.value }}'
          base: 'main'
          title: 'docs: sync documentation with code changes'
          commit-message: 'docs: sync documentation with code changes'
          body: |
            Automated documentation sync triggered by changes in main branch.

            Updates original documentation files to reflect code changes.
          add-paths: |
            CLAUDE.md
            README_original.md
            docs/*_original.md
          labels: "${{ vars.CLAUDE_DOC_SYNC_SKIP_LABEL || 'skip-doc-sync' }}"
